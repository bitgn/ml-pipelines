// Code generated by protoc-gen-go.
// source: mlp_api.proto
// DO NOT EDIT!

/*
Package mlp_api is a generated protocol buffer package.

It is generated from these files:
	mlp_api.proto

It has these top-level messages:
	CreateProjectRequest
	CreateProjectResponse
	StatRequest
	StatResponse
	CreateDataset
*/
package mlp_api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import vo "mlp/catalog/vo"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateProjectRequest struct {
	ProjectId string                   `protobuf:"bytes,1,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	Meta      *vo.ProjectMetadataDelta `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
}

func (m *CreateProjectRequest) Reset()                    { *m = CreateProjectRequest{} }
func (m *CreateProjectRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateProjectRequest) ProtoMessage()               {}
func (*CreateProjectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateProjectRequest) GetMeta() *vo.ProjectMetadataDelta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type CreateProjectResponse struct {
}

func (m *CreateProjectResponse) Reset()                    { *m = CreateProjectResponse{} }
func (m *CreateProjectResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateProjectResponse) ProtoMessage()               {}
func (*CreateProjectResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type StatRequest struct {
}

func (m *StatRequest) Reset()                    { *m = StatRequest{} }
func (m *StatRequest) String() string            { return proto.CompactTextString(m) }
func (*StatRequest) ProtoMessage()               {}
func (*StatRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type StatResponse struct {
	Version string `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
}

func (m *StatResponse) Reset()                    { *m = StatResponse{} }
func (m *StatResponse) String() string            { return proto.CompactTextString(m) }
func (*StatResponse) ProtoMessage()               {}
func (*StatResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type CreateDataset struct {
	DatasetId string                   `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId" json:"dataset_id,omitempty"`
	ProjectId string                   `protobuf:"bytes,2,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	Meta      *vo.DatasetMetadataDelta `protobuf:"bytes,3,opt,name=meta" json:"meta,omitempty"`
}

func (m *CreateDataset) Reset()                    { *m = CreateDataset{} }
func (m *CreateDataset) String() string            { return proto.CompactTextString(m) }
func (*CreateDataset) ProtoMessage()               {}
func (*CreateDataset) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateDataset) GetMeta() *vo.DatasetMetadataDelta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateProjectRequest)(nil), "CreateProjectRequest")
	proto.RegisterType((*CreateProjectResponse)(nil), "CreateProjectResponse")
	proto.RegisterType((*StatRequest)(nil), "StatRequest")
	proto.RegisterType((*StatResponse)(nil), "StatResponse")
	proto.RegisterType((*CreateDataset)(nil), "CreateDataset")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Catalog service

type CatalogClient interface {
	CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*CreateProjectResponse, error)
	Stat(ctx context.Context, in *StatRequest, opts ...grpc.CallOption) (*StatResponse, error)
}

type catalogClient struct {
	cc *grpc.ClientConn
}

func NewCatalogClient(cc *grpc.ClientConn) CatalogClient {
	return &catalogClient{cc}
}

func (c *catalogClient) CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*CreateProjectResponse, error) {
	out := new(CreateProjectResponse)
	err := grpc.Invoke(ctx, "/Catalog/CreateProject", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *catalogClient) Stat(ctx context.Context, in *StatRequest, opts ...grpc.CallOption) (*StatResponse, error) {
	out := new(StatResponse)
	err := grpc.Invoke(ctx, "/Catalog/Stat", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Catalog service

type CatalogServer interface {
	CreateProject(context.Context, *CreateProjectRequest) (*CreateProjectResponse, error)
	Stat(context.Context, *StatRequest) (*StatResponse, error)
}

func RegisterCatalogServer(s *grpc.Server, srv CatalogServer) {
	s.RegisterService(&_Catalog_serviceDesc, srv)
}

func _Catalog_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatalogServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Catalog/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatalogServer).CreateProject(ctx, req.(*CreateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Catalog_Stat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatalogServer).Stat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Catalog/Stat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatalogServer).Stat(ctx, req.(*StatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Catalog_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Catalog",
	HandlerType: (*CatalogServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProject",
			Handler:    _Catalog_CreateProject_Handler,
		},
		{
			MethodName: "Stat",
			Handler:    _Catalog_Stat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("mlp_api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x91, 0x51, 0x4b, 0xc3, 0x30,
	0x10, 0xc7, 0xd7, 0x39, 0x9c, 0xbb, 0xad, 0x2f, 0xc1, 0x6a, 0x29, 0x08, 0x23, 0x20, 0xd4, 0x97,
	0x3c, 0xcc, 0x2f, 0x20, 0x6c, 0x2f, 0x7b, 0x10, 0xa4, 0x7e, 0x80, 0x79, 0x9a, 0x43, 0x2a, 0xdd,
	0x12, 0x93, 0x73, 0xf8, 0xf1, 0xc5, 0x26, 0x85, 0x32, 0xba, 0xb7, 0xbb, 0x4b, 0x72, 0xff, 0xff,
	0xef, 0x1f, 0x48, 0xf7, 0x8d, 0xdd, 0xa1, 0xad, 0x95, 0x75, 0x86, 0x4d, 0x71, 0x75, 0x34, 0xa1,
	0x92, 0x6f, 0x70, 0xbd, 0x76, 0x84, 0x4c, 0x2f, 0xce, 0x7c, 0xd1, 0x07, 0x57, 0xf4, 0xfd, 0x43,
	0x9e, 0xc5, 0x1d, 0x80, 0x0d, 0x93, 0x5d, 0xad, 0xf3, 0x64, 0x99, 0x94, 0xb3, 0x6a, 0x16, 0x27,
	0x5b, 0x2d, 0x1e, 0x60, 0xb2, 0x27, 0xc6, 0x7c, 0xbc, 0x4c, 0xca, 0xf9, 0x2a, 0x53, 0xf1, 0xf5,
	0x33, 0x31, 0x6a, 0x64, 0xdc, 0x50, 0xc3, 0x58, 0xb5, 0x57, 0xe4, 0x2d, 0x64, 0x27, 0x0a, 0xde,
	0x9a, 0x83, 0x27, 0x99, 0xc2, 0xfc, 0x95, 0xb1, 0x53, 0x94, 0x25, 0x2c, 0x42, 0x1b, 0x8e, 0x45,
	0x0e, 0xd3, 0x23, 0x39, 0x5f, 0x9b, 0x43, 0x94, 0xef, 0x5a, 0xf9, 0x0b, 0x69, 0xd8, 0xb8, 0x41,
	0x46, 0x4f, 0xad, 0x59, 0x1d, 0xca, 0x9e, 0xd9, 0x38, 0xd9, 0xea, 0x13, 0x96, 0xf1, 0x39, 0x96,
	0x8b, 0xc8, 0x12, 0xb7, 0x0e, 0xb0, 0xac, 0x1c, 0x4c, 0xd7, 0xc8, 0xd8, 0x98, 0x4f, 0xf1, 0xd4,
	0x99, 0x88, 0x58, 0x22, 0x53, 0x43, 0x41, 0x16, 0x37, 0x6a, 0x98, 0x7e, 0x24, 0xee, 0x61, 0xf2,
	0x0f, 0x2c, 0x16, 0xaa, 0x17, 0x43, 0x91, 0xaa, 0x7e, 0x0a, 0x72, 0xf4, 0x7e, 0xd9, 0x7e, 0xd4,
	0xe3, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x27, 0xf1, 0xb2, 0xb7, 0xc3, 0x01, 0x00, 0x00,
}

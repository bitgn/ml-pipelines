# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import test_api_pb2 as test__api__pb2


class TestStub(object):
  """TODO: make this streaming

  Test service helps to automate specification checks, screenshots and tutorials
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Setup = channel.unary_unary(
        '/Test/Setup',
        request_serializer=test__api__pb2.ScenarioRequest.SerializeToString,
        response_deserializer=test__api__pb2.OkResponse.FromString,
        )
    self.Kill = channel.unary_unary(
        '/Test/Kill',
        request_serializer=test__api__pb2.KillRequest.SerializeToString,
        response_deserializer=test__api__pb2.OkResponse.FromString,
        )
    self.Ping = channel.unary_unary(
        '/Test/Ping',
        request_serializer=test__api__pb2.PingRequest.SerializeToString,
        response_deserializer=test__api__pb2.OkResponse.FromString,
        )
    self.Wipe = channel.unary_unary(
        '/Test/Wipe',
        request_serializer=test__api__pb2.WipeDatabase.SerializeToString,
        response_deserializer=test__api__pb2.OkResponse.FromString,
        )
    self.Apply = channel.unary_unary(
        '/Test/Apply',
        request_serializer=test__api__pb2.ApplyRequest.SerializeToString,
        response_deserializer=test__api__pb2.ApplyResponse.FromString,
        )


class TestServicer(object):
  """TODO: make this streaming

  Test service helps to automate specification checks, screenshots and tutorials
  """

  def Setup(self, request, context):
    """Setup a given state in the database
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Kill(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Ping(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Wipe(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Apply(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TestServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Setup': grpc.unary_unary_rpc_method_handler(
          servicer.Setup,
          request_deserializer=test__api__pb2.ScenarioRequest.FromString,
          response_serializer=test__api__pb2.OkResponse.SerializeToString,
      ),
      'Kill': grpc.unary_unary_rpc_method_handler(
          servicer.Kill,
          request_deserializer=test__api__pb2.KillRequest.FromString,
          response_serializer=test__api__pb2.OkResponse.SerializeToString,
      ),
      'Ping': grpc.unary_unary_rpc_method_handler(
          servicer.Ping,
          request_deserializer=test__api__pb2.PingRequest.FromString,
          response_serializer=test__api__pb2.OkResponse.SerializeToString,
      ),
      'Wipe': grpc.unary_unary_rpc_method_handler(
          servicer.Wipe,
          request_deserializer=test__api__pb2.WipeDatabase.FromString,
          response_serializer=test__api__pb2.OkResponse.SerializeToString,
      ),
      'Apply': grpc.unary_unary_rpc_method_handler(
          servicer.Apply,
          request_deserializer=test__api__pb2.ApplyRequest.FromString,
          response_serializer=test__api__pb2.ApplyResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Test', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))

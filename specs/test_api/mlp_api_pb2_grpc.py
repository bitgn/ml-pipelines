# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import mlp_api_pb2 as mlp__api__pb2


class CatalogStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateProject = channel.unary_unary(
        '/Catalog/CreateProject',
        request_serializer=mlp__api__pb2.CreateProjectRequest.SerializeToString,
        response_deserializer=mlp__api__pb2.CreateProjectResponse.FromString,
        )
    self.CreateDataset = channel.unary_unary(
        '/Catalog/CreateDataset',
        request_serializer=mlp__api__pb2.CreateDatasetRequest.SerializeToString,
        response_deserializer=mlp__api__pb2.CreateDatasetResponse.FromString,
        )
    self.UpdateDataset = channel.unary_unary(
        '/Catalog/UpdateDataset',
        request_serializer=mlp__api__pb2.UpdateDatasetRequest.SerializeToString,
        response_deserializer=mlp__api__pb2.ApiResponse.FromString,
        )
    self.Stat = channel.unary_unary(
        '/Catalog/Stat',
        request_serializer=mlp__api__pb2.StatRequest.SerializeToString,
        response_deserializer=mlp__api__pb2.StatResponse.FromString,
        )


class CatalogServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def CreateProject(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateDataset(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateDataset(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Stat(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CatalogServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateProject': grpc.unary_unary_rpc_method_handler(
          servicer.CreateProject,
          request_deserializer=mlp__api__pb2.CreateProjectRequest.FromString,
          response_serializer=mlp__api__pb2.CreateProjectResponse.SerializeToString,
      ),
      'CreateDataset': grpc.unary_unary_rpc_method_handler(
          servicer.CreateDataset,
          request_deserializer=mlp__api__pb2.CreateDatasetRequest.FromString,
          response_serializer=mlp__api__pb2.CreateDatasetResponse.SerializeToString,
      ),
      'UpdateDataset': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateDataset,
          request_deserializer=mlp__api__pb2.UpdateDatasetRequest.FromString,
          response_serializer=mlp__api__pb2.ApiResponse.SerializeToString,
      ),
      'Stat': grpc.unary_unary_rpc_method_handler(
          servicer.Stat,
          request_deserializer=mlp__api__pb2.StatRequest.FromString,
          response_serializer=mlp__api__pb2.StatResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Catalog', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
